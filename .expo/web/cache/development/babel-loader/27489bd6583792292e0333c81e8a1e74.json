{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport estilos from \"./estilos\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function EntradaTexto(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      onChangeText = _ref.onChangeText,\n      secureTextEntry = _ref.secureTextEntry,\n      error = _ref.error,\n      messageError = _ref.messageError;\n\n  var _useState = useState(secureTextEntry),\n      _useState2 = _slicedToArray(_useState, 2),\n      secureMode = _useState2[0],\n      setSecureMode = _useState2[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextInput, {\n      label: label,\n      value: value,\n      error: error,\n      secureTextEntry: secureMode,\n      onChangeText: onChangeText,\n      style: estilos.input,\n      mode: \"outlined\",\n      activeOutlineColor: \"#1E8187\",\n      right: secureTextEntry ? _jsx(TextInput.Icon, {\n        name: secureMode ? 'eye-off' : 'eye',\n        onPress: function onPress() {\n          return setSecureMode(!secureMode);\n        }\n      }) : null\n    }), error && _jsx(HelperText, {\n      type: \"error\",\n      visible: error,\n      children: messageError\n    })]\n  });\n}","map":{"version":3,"names":["useState","TextInput","HelperText","estilos","EntradaTexto","label","value","onChangeText","secureTextEntry","error","messageError","secureMode","setSecureMode","input"],"sources":["/home/rafa/estudo/app_projetoIntegrador3/src/componentes/EntradaTexto/index.js"],"sourcesContent":["import { useState } from 'react';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport estilos from './estilos';\n\nexport function EntradaTexto({ label, value, onChangeText, secureTextEntry, error, messageError }) {\n  const [secureMode, setSecureMode] = useState(secureTextEntry);\n\n  return (\n    <>\n      <TextInput\n        label={label}\n        value={value}\n        error={error}\n        secureTextEntry={secureMode}\n        onChangeText={onChangeText}\n        style={estilos.input}\n        mode=\"outlined\"\n        activeOutlineColor='#1E8187'\n        right={\n          secureTextEntry ?\n          <TextInput.Icon\n            name={secureMode ? 'eye-off' : 'eye'}\n            onPress={() => setSecureMode(!secureMode)}\n          /> : null\n        }\n      />\n      {error && <HelperText type=\"error\" visible={error}>\n        {messageError}\n      </HelperText>}\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,OAAP;;;;AAEA,OAAO,SAASC,YAAT,OAA4F;EAAA,IAApEC,KAAoE,QAApEA,KAAoE;EAAA,IAA7DC,KAA6D,QAA7DA,KAA6D;EAAA,IAAtDC,YAAsD,QAAtDA,YAAsD;EAAA,IAAxCC,eAAwC,QAAxCA,eAAwC;EAAA,IAAvBC,KAAuB,QAAvBA,KAAuB;EAAA,IAAhBC,YAAgB,QAAhBA,YAAgB;;EACjG,gBAAoCV,QAAQ,CAACQ,eAAD,CAA5C;EAAA;EAAA,IAAOG,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,OACE;IAAA,WACE,KAAC,SAAD;MACE,KAAK,EAAEP,KADT;MAEE,KAAK,EAAEC,KAFT;MAGE,KAAK,EAAEG,KAHT;MAIE,eAAe,EAAEE,UAJnB;MAKE,YAAY,EAAEJ,YALhB;MAME,KAAK,EAAEJ,OAAO,CAACU,KANjB;MAOE,IAAI,EAAC,UAPP;MAQE,kBAAkB,EAAC,SARrB;MASE,KAAK,EACHL,eAAe,GACf,KAAC,SAAD,CAAW,IAAX;QACE,IAAI,EAAEG,UAAU,GAAG,SAAH,GAAe,KADjC;QAEE,OAAO,EAAE;UAAA,OAAMC,aAAa,CAAC,CAACD,UAAF,CAAnB;QAAA;MAFX,EADe,GAIV;IAdT,EADF,EAkBGF,KAAK,IAAI,KAAC,UAAD;MAAY,IAAI,EAAC,OAAjB;MAAyB,OAAO,EAAEA,KAAlC;MAAA,UACPC;IADO,EAlBZ;EAAA,EADF;AAwBD"},"metadata":{},"sourceType":"module"}