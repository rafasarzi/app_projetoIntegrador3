{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport estilos from \"./estilos\";\nimport { buscaUsuario } from \"../../servicos/requisicoes/usuarios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Principal(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeUsuario = _useState2[0],\n      setNomeUsuario = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      usuario = _useState4[0],\n      setUsuario = _useState4[1];\n\n  function busca() {\n    var resultado;\n    return _regeneratorRuntime.async(function busca$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(buscaUsuario(nomeUsuario));\n\n          case 2:\n            resultado = _context.sent;\n            setNomeUsuario('');\n\n            if (resultado) {\n              setUsuario(resultado);\n            } else {\n              Alert.alert('Aluno nao encontrado');\n              setUsuario({});\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: estilos.container,\n      children: [(usuario == null ? void 0 : usuario.login) && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: estilos.textoNome,\n          children: usuario.name\n        }), _jsx(Text, {\n          style: estilos.textoEmail,\n          children: usuario.email\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Repositorios', {\n              id: usuario.id\n            });\n          },\n          children: _jsx(Text, {\n            style: estilos.repositorios,\n            children: \"Ver os status\"\n          })\n        })]\n      }), _jsx(TextInput, {\n        placeholder: \"Busque por um aluno\",\n        autoCapitalize: \"none\",\n        style: estilos.entrada,\n        value: nomeUsuario,\n        onChangeText: setNomeUsuario\n      }), _jsx(TouchableOpacity, {\n        style: estilos.botao,\n        onPress: busca,\n        children: _jsx(Text, {\n          style: estilos.textoBotao,\n          children: \"Buscar\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","estilos","buscaUsuario","Principal","navigation","nomeUsuario","setNomeUsuario","usuario","setUsuario","busca","resultado","Alert","alert","container","login","textoNome","name","textoEmail","email","navigate","id","repositorios","entrada","botao","textoBotao"],"sources":["/home/rafa/estudo/app_projetoIntegrador3/src/paginas/Principal/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, Image, TouchableOpacity, TextInput, Alert, ScrollView } from 'react-native';\nimport estilos from './estilos';\nimport { buscaUsuario } from '../../servicos/requisicoes/usuarios';\n\nexport default function Principal({ navigation }) {\n    const [nomeUsuario, setNomeUsuario] = useState('');\n    const [usuario, setUsuario] = useState({});\n\n    async function busca(){\n        const resultado = await buscaUsuario(nomeUsuario)\n\n        setNomeUsuario('')\n        if (resultado ) {\n            setUsuario(resultado)\n        }\n        else {\n            Alert.alert('Aluno nao encontrado')\n            setUsuario({})\n        }\n    }\n\n    return (\n        <ScrollView>\n            <View style={estilos.container}>\n                {\n                    usuario?.login &&\n                <>\n                    {/* <View style={estilos.fundo} />\n                    <View style={estilos.imagemArea}>\n                        <Image source={{ uri: usuario.avatar_url }} style={estilos.imagem} />\n                    </View> */}\n                    <Text style={estilos.textoNome}>{usuario.name}</Text>\n                    <Text style={estilos.textoEmail}>{usuario.email}</Text>\n                    {/* <View style={estilos.seguidoresArea}>\n                        <View style={estilos.seguidores}>\n                            <Text style={estilos.seguidoresNumero}>{usuario.followers}</Text>\n                            <Text style={estilos.seguidoresTexto}>Seguidores</Text>\n                        </View>\n                        <View style={estilos.seguidores}>\n                            <Text style={estilos.seguidoresNumero}>{usuario.following}</Text>\n                            <Text style={estilos.seguidoresTexto}>Seguindo</Text>\n                        </View>\n                    </View> */}\n                    <TouchableOpacity onPress={() => navigation.navigate('Repositorios', {id: usuario.id})}>\n                        <Text style={estilos.repositorios}>\n                            Ver os status\n                        </Text>\n                    </TouchableOpacity>\n                </>\n                }\n\n                <TextInput\n                    placeholder=\"Busque por um aluno\"\n                    autoCapitalize=\"none\"\n                    style={estilos.entrada}\n                    value={nomeUsuario}\n                    onChangeText={setNomeUsuario}\n                />\n\n                <TouchableOpacity style={estilos.botao}\n                    onPress={busca}\n                >\n                    <Text style={estilos.textoBotao}>\n                        Buscar\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        </ScrollView>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,OAAOC,OAAP;AACA,SAASC,YAAT;;;;AAEA,eAAe,SAASC,SAAT,OAAmC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC9C,gBAAsCJ,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOK,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAA8BN,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,SAAeC,KAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC4BP,YAAY,CAACG,WAAD,CADxC;;UAAA;YACUK,SADV;YAGIJ,cAAc,CAAC,EAAD,CAAd;;YACA,IAAII,SAAJ,EAAgB;cACZF,UAAU,CAACE,SAAD,CAAV;YACH,CAFD,MAGK;cACDC,KAAK,CAACC,KAAN,CAAY,sBAAZ;cACAJ,UAAU,CAAC,EAAD,CAAV;YACH;;UAVL;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAaA,OACI,KAAC,UAAD;IAAA,UACI,MAAC,IAAD;MAAM,KAAK,EAAEP,OAAO,CAACY,SAArB;MAAA,WAEQ,CAAAN,OAAO,QAAP,YAAAA,OAAO,CAAEO,KAAT,KACJ;QAAA,WAKI,KAAC,IAAD;UAAM,KAAK,EAAEb,OAAO,CAACc,SAArB;UAAA,UAAiCR,OAAO,CAACS;QAAzC,EALJ,EAMI,KAAC,IAAD;UAAM,KAAK,EAAEf,OAAO,CAACgB,UAArB;UAAA,UAAkCV,OAAO,CAACW;QAA1C,EANJ,EAiBI,KAAC,gBAAD;UAAkB,OAAO,EAAE;YAAA,OAAMd,UAAU,CAACe,QAAX,CAAoB,cAApB,EAAoC;cAACC,EAAE,EAAEb,OAAO,CAACa;YAAb,CAApC,CAAN;UAAA,CAA3B;UAAA,UACI,KAAC,IAAD;YAAM,KAAK,EAAEnB,OAAO,CAACoB,YAArB;YAAA;UAAA;QADJ,EAjBJ;MAAA,EAHJ,EA4BI,KAAC,SAAD;QACI,WAAW,EAAC,qBADhB;QAEI,cAAc,EAAC,MAFnB;QAGI,KAAK,EAAEpB,OAAO,CAACqB,OAHnB;QAII,KAAK,EAAEjB,WAJX;QAKI,YAAY,EAAEC;MALlB,EA5BJ,EAoCI,KAAC,gBAAD;QAAkB,KAAK,EAAEL,OAAO,CAACsB,KAAjC;QACI,OAAO,EAAEd,KADb;QAAA,UAGI,KAAC,IAAD;UAAM,KAAK,EAAER,OAAO,CAACuB,UAArB;UAAA;QAAA;MAHJ,EApCJ;IAAA;EADJ,EADJ;AAgDH"},"metadata":{},"sourceType":"module"}