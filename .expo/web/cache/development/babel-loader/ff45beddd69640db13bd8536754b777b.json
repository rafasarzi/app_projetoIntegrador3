{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { EntradaTexto } from \"../../componentes/EntradaTexto\";\nimport { criarUsuario } from \"../../servicos/requisicoes/usuarios\";\nimport estilos from \"../Principal/estilos\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CriarCliente(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      login = _useState6[0],\n      setLogin = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      statusError = _useState8[0],\n      setStatusError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mensagemError = _useState10[0],\n      setMensagemError = _useState10[1];\n\n  function criar() {\n    var emailRegex;\n    return _regeneratorRuntime.async(function criar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\n            if (!(email === '')) {\n              _context.next = 7;\n              break;\n            }\n\n            setMensagemError('Digite seu email');\n            setStatusError('email');\n            console.log('email', email);\n            _context.next = 30;\n            break;\n\n          case 7:\n            if (emailRegex.test(email)) {\n              _context.next = 13;\n              break;\n            }\n\n            setMensagemError('Digite um email válido');\n            setStatusError('email');\n            console.log('email', email);\n            _context.next = 30;\n            break;\n\n          case 13:\n            if (!(nome === '')) {\n              _context.next = 18;\n              break;\n            }\n\n            setMensagemError('Digite seu nome');\n            setStatusError('nome');\n            _context.next = 30;\n            break;\n\n          case 18:\n            if (!(login === '')) {\n              _context.next = 23;\n              break;\n            }\n\n            setMensagemError('Digite username');\n            setStatusError('login');\n            _context.next = 30;\n            break;\n\n          case 23:\n            _context.next = 25;\n            return _regeneratorRuntime.awrap(criarUsuario(nome, email, login));\n\n          case 25:\n            setEmail('');\n            setLogin('');\n            setNome('');\n            setMensagemError('');\n            setStatusError('');\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: estilos.container,\n    children: [_jsx(EntradaTexto, {\n      label: \"E-mail\",\n      value: email,\n      onChangeText: function onChangeText(texto) {\n        return setEmail(texto);\n      },\n      error: statusError == 'email',\n      messageError: mensagemError\n    }), _jsx(EntradaTexto, {\n      label: \"Nome\",\n      value: nome,\n      onChangeText: function onChangeText(texto) {\n        return setNome(texto);\n      },\n      error: statusError == 'nome',\n      messageError: mensagemError\n    }), _jsx(EntradaTexto, {\n      label: \"Username\",\n      value: login,\n      onChangeText: function onChangeText(texto) {\n        return setLogin(texto);\n      },\n      error: statusError == 'login',\n      messageError: mensagemError\n    }), _jsx(TouchableOpacity, {\n      style: estilos.botao,\n      onPress: criar,\n      children: _jsx(Text, {\n        style: estilos.textoBotao,\n        children: \"CRIAR\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","EntradaTexto","criarUsuario","estilos","CriarCliente","navigation","nome","setNome","email","setEmail","login","setLogin","statusError","setStatusError","mensagemError","setMensagemError","criar","emailRegex","console","log","test","container","texto","botao","textoBotao"],"sources":["/home/rafa/estudo/app_projetoIntegrador3/src/paginas/CriarCliente/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Alert, Picker } from 'react-native';\nimport { EntradaTexto } from '../../componentes/EntradaTexto';\nimport { criarUsuario } from '../../servicos/requisicoes/usuarios';\nimport estilos from '../Principal/estilos';\n\nexport default function CriarCliente({ navigation }) {\n    const [nome, setNome] = useState('');\n    const [email, setEmail] = useState('');\n    const [login, setLogin] = useState('')\n    const [statusError, setStatusError] = useState('')\n    const [mensagemError, setMensagemError] = useState('')\n\n    async function criar(){\n        const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\n        if (email === ''){\n            setMensagemError('Digite seu email')\n            setStatusError('email')\n            console.log('email', email)\n        }else if (!(emailRegex).test(email)) {\n            setMensagemError('Digite um email válido')\n            setStatusError('email')\n            console.log('email', email)\n        }\n        else if(nome ===''){\n            setMensagemError('Digite seu nome')\n            setStatusError('nome')\n        }else if(login === ''){\n            setMensagemError('Digite username')\n            setStatusError('login')\n        }else{\n             await criarUsuario(\n                nome,\n                email,\n                login\n            )\n            setEmail('')\n            setLogin('')\n            setNome('')\n            setMensagemError('')\n            setStatusError('')\n        }\n\n    }\n\n    return (\n        <View style={estilos.container}>\n            <EntradaTexto \n                label=\"E-mail\"\n                value={email}\n                onChangeText={texto => setEmail(texto)}\n                error={statusError == 'email'}\n                messageError={mensagemError}\n            />\n            <EntradaTexto\n                label=\"Nome\"\n                value={nome}\n                onChangeText={texto => setNome(texto)}\n                error={statusError == 'nome'}\n                messageError={mensagemError}\n            />\n            <EntradaTexto\n                label=\"Username\"\n                value={login}\n                onChangeText={texto => setLogin(texto)}\n                error={statusError == 'login'}\n                messageError={mensagemError}           \n             />\n            <TouchableOpacity \n                style={estilos.botao}\n                onPress={criar}\n            >\n                <Text style={estilos.textoBotao}>\n                    CRIAR\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}